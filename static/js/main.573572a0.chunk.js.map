{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setReverse","NONE","sortType","setSortType","sortByType","type","showResetButton","reorderedGoods","goods","visibleGoods","sort","prevGood","currGood","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","classNames","onClick","current","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAME,EAAgB,WAC3B,MAAiCC,oBAAS,GAA1C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAMMC,EAAa,SAACC,GAClBF,EAAYE,IAQRC,EAAkBJ,IAAaP,EAASM,MAAQF,EAChDQ,EA5CD,SACLC,EADK,GAGJ,IADCN,EACF,EADEA,SAAUH,EACZ,EADYA,WAENU,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAUC,GAC3B,OAAQV,GACN,KAAKP,EAASkB,SACZ,OAAOF,EAASG,cAAcF,GAEhC,KAAKjB,EAASoB,OACZ,OAAOJ,EAASK,OAASJ,EAASI,OAEpC,QACE,OAAO,MAITjB,GACFU,EAAaQ,UAGRR,EAqBgBS,CACrBtB,EAAiB,CAAEG,aAAYG,aAGjC,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEd,KAAK,SACLc,UAAWC,IACT,iBAAkB,CAChB,WAAYlB,IAAaP,EAASkB,WAGtCQ,QAAS,WACPjB,EAAWT,EAASkB,WARxB,iCAcA,wBACER,KAAK,SACLc,UAAWC,IACT,oBAAqB,CACnB,WAAYlB,IAAaP,EAASoB,SAGtCM,QAAS,WACPjB,EAAWT,EAASoB,SARxB,4BAcA,wBACEV,KAAK,SACLc,UAAWC,IACT,oBAAqB,CACnB,YAAarB,IAGjBsB,QAAS,WAvDfrB,GAAW,SAAAsB,GAAO,OAAKA,MAgDnB,qBAcChB,GACC,wBACED,KAAK,SACLc,UAAU,4BACVE,QAAS,WA1DjBlB,EAAYR,EAASM,MACrBD,GAAW,IAsDL,sBAYJ,6BACE,6BAEIO,EAAegB,KAAI,SAAAC,GAAI,OACrB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,cCxItCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.573572a0.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((prevGood, currGood) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return prevGood.localeCompare(currGood);\n\n      case SortType.LENGTH:\n        return prevGood.length - currGood.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReverse] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const reverse = () => {\n    setReverse(current => !current);\n  };\n\n  const sortByType = (type: SortType) => {\n    setSortType(type);\n  };\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setReverse(false);\n  };\n\n  const showResetButton = sortType !== SortType.NONE || isReversed;\n  const reorderedGoods = getReorderedGoods(\n    goodsFromServer, { isReversed, sortType },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info', {\n              'is-light': sortType !== SortType.ALPHABET,\n            },\n          )}\n          onClick={() => {\n            sortByType(SortType.ALPHABET);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success', {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={() => {\n            sortByType(SortType.LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning', {\n              'is-light': !isReversed,\n            },\n          )}\n          onClick={() => {\n            reverse();\n          }}\n        >\n          Reverse\n        </button>\n\n        {showResetButton && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              reset();\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {\n            reorderedGoods.map(good => (\n              <li data-cy=\"Good\" key={good}>\n                {good}\n              </li>\n            ))\n          }\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}